
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ferpa
 */
public class Actualizar_Inventario extends javax.swing.JInternalFrame {

    /**
     * Creates new form Actualizar_Inventario
     */
    Inventario inventario;
    MostrarInventario mostrar;
    int h=0,p=0,o=0;
    public Actualizar_Inventario() {
        initComponents();
        this.nombrep.removeAllItems();
        this.tipo.removeAllItems();
        this.bodega.removeAllItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void cargarBusquedad(){
    
    try {

            Class.forName("com.mysql.jdbc.Driver");
            Connection miConexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/sipe", "root", "");
            System.out.println("conexion establecidad");
            PreparedStatement miSentencia = miConexion.prepareStatement("{CALL SeleccionarProducto(?)}");

         miSentencia.setString(1,(String)nombrep.getSelectedItem());
            Statement st;
            
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Id Producto");
            model.addColumn("Id Ubicacion");
            model.addColumn("Id Categoria");
            model.addColumn("Nombre Producto");
            model.addColumn("Cantidad Producto");
            model.addColumn("Precio Unidad");
            model.addColumn("Precio Cantidad");
            
            jTable1.setModel(model);
            
            
            String[] dato = new String[7];
            
            st=miConexion.createStatement();
            
            ResultSet rs = miSentencia.executeQuery();
            
            while(rs.next()){
                
                
                
              System.out.println(rs.getString(1));
                dato[0]=rs.getString(1);
                idp.setText(rs.getString(1));
                dato[1]=rs.getString(2);
                idc.setText(rs.getString(2));
                dato[2]=rs.getString(3);
                idu.setText(rs.getString(3));
                dato[3]=rs.getString(4);
                nombre.setText(rs.getString(4));
                dato[4]=rs.getString(5);
                cantidad.setText(rs.getString(5));
                dato[5]=rs.getString(6);
                unidad.setText(rs.getString(6));
                dato[6]=rs.getString(7);
                precio.setText(rs.getString(7));
                model.addRow(dato);
               
            }
            
            

        } catch (ClassNotFoundException ce) {
            ce.printStackTrace();
        } catch (SQLException ex) {
            Logger.getLogger(Actualizar.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    
    
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        idp = new javax.swing.JTextField();
        idu = new javax.swing.JTextField();
        idc = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cantidad = new javax.swing.JTextField();
        unidad = new javax.swing.JTextField();
        precio = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        btnRegresar5 = new javax.swing.JButton();
        tipo = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        bodega = new javax.swing.JComboBox<>();
        nombrep = new javax.swing.JComboBox<>();

        jLabel10.setText("Bodega");

        jLabel1.setText("Seleccione Producto a modificar:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Producto", "Id Ubicacion", "Id Categoria", "Nombre Producto", "Cantidad Producto", "Precio Unidad", "Precio cantidad"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("NÂ° Factura:");

        jLabel3.setText("Id Ubicacion:");

        jLabel4.setText("Id Categoria:");

        jLabel5.setText("Nombre Producto:");

        jLabel6.setText("Cantidad Producto:");

        jLabel7.setText("Precio Unidad:");

        idp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idpKeyTyped(evt);
            }
        });

        idu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                iduKeyTyped(evt);
            }
        });

        idc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idcKeyTyped(evt);
            }
        });

        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreKeyTyped(evt);
            }
        });

        jLabel8.setText("Precio Por Cantidad:");

        cantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadActionPerformed(evt);
            }
        });
        cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadKeyTyped(evt);
            }
        });

        unidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                unidadKeyTyped(evt);
            }
        });

        precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precioKeyTyped(evt);
            }
        });

        jButton2.setText("Actualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnRegresar5.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnRegresar5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/BACK2.png"))); // NOI18N
        btnRegresar5.setBorderPainted(false);
        btnRegresar5.setContentAreaFilled(false);
        btnRegresar5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresar5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegresar5.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/BACK3.png"))); // NOI18N
        btnRegresar5.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/BACK.png"))); // NOI18N
        btnRegresar5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnRegresar5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegresar5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegresar5MouseClicked(evt);
            }
        });
        btnRegresar5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresar5ActionPerformed(evt);
            }
        });

        tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });

        jLabel9.setText("Tipo de compra:");

        jLabel11.setText("Bodega");

        bodega.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        bodega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bodegaActionPerformed(evt);
            }
        });

        nombrep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        nombrep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombrepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nombrep, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(idp, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(idu))))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                                .addComponent(idc, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nombre, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                    .addComponent(unidad)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(precio, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(tipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(125, 125, 125))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(30, 30, 30)
                        .addComponent(bodega, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128)
                        .addComponent(btnRegresar5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(nombrep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(idp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(idu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(unidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(bodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRegresar5)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        cargarBusquedad();
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        try {

            Class.forName("com.mysql.jdbc.Driver");
            Connection miConexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/sipe", "root", "");
            System.out.println("conexion establecidad");
            PreparedStatement miSentencia = miConexion.prepareStatement("{CALL modificarProducto(?,?,?,?,?)}");
            
            if(idp.getText().equals("")){
                
                JOptionPane.showMessageDialog(rootPane,"El Campo N factura esta vacio ");
                this.idp.requestFocus();
                
            }else if(idc.getText().equals("")){
        
                JOptionPane.showMessageDialog(rootPane,"El campo Id categoria esta vacio");
                this.idc.requestFocus();
        
            }else if(idu.getText().equals("")){
            
                JOptionPane.showMessageDialog(rootPane,"El campo Id Ubicacion  esta vacio");
                this.idu.requestFocus();
            
            
            }else if(nombre.getText().equals("")){
            
                JOptionPane.showMessageDialog(rootPane, "El campo Nombre Producto esta vacio");
                this.nombre.requestFocus();
            
            }else if(cantidad.getText().equals("")){
            
            
            JOptionPane.showMessageDialog(rootPane, "El campo cantidad Producto esta vacio");
            this.cantidad.requestFocus();
            
            }else if(unidad.getText().equals("")){
            
                JOptionPane.showMessageDialog(rootPane, "El campo precio por unidad esta vacio");
                this.unidad.requestFocus();
                
            }else if(precio.getText().equals("")){
                
                JOptionPane.showMessageDialog(rootPane, "El campo Precio por catidad esta vacio");
                this.precio.requestFocus();
            
            
            
            }else if(bodega.getSelectedItem().equals("Selecciona una Opcion")){
            
                    JOptionPane.showMessageDialog(rootPane, "Seleccione una opcion distinta");
                    this.bodega.requestFocus();
            
            
            
            }else if(tipo.getSelectedItem().equals("Selecciona una Opcion")){
                
                JOptionPane.showMessageDialog(rootPane,"Seleccione un opcion distinta");
                this.tipo.requestFocus();
            
                
            }
            
            
            
            
            
            
            
            
            else{
            
                miSentencia.setString(1,nombre.getText());
                miSentencia.setString(2,cantidad.getText());
                miSentencia.setString(3,unidad.getText());
                miSentencia.setString(4,precio.getText());
                miSentencia.setString(5,(String)nombrep.getSelectedItem());

                miSentencia.executeUpdate();


                nombre.setText("");
                cantidad.setText("");
                unidad.setText("");
                precio.setText("");


            
            
            }
        
            
         
         

        } catch (ClassNotFoundException ce) {
            ce.printStackTrace();
        } catch (SQLException ex) {
            Logger.getLogger(Actualizar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      
        
        if(inventario==null || inventario.isClosed()){
        
        inventario = new Inventario();
        Principal.Escritorio.add(inventario);
        inventario.show();
        dispose();
            
        
        }
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    
    public void actualizar(){
    
    if(inventario==null || inventario.isClosed()){
        
        
            inventario = new Inventario();
            Principal.Escritorio.add(inventario);
            inventario.show();
            
        
        
        }
    
    }
    
    
    
    private void cantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadActionPerformed

    private void btnRegresar5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegresar5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegresar5MouseClicked

    private void btnRegresar5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresar5ActionPerformed
        // TODO add your handling code here:

        this.dispose();
    }//GEN-LAST:event_btnRegresar5ActionPerformed

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        // TODO add your handling code here:

        try {
            //lista2.removeAllItems();
            Class.forName("com.mysql.jdbc.Driver");
            Connection miConexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/sipe", "root", "");
            System.out.println("conexion establecidad");
            PreparedStatement miSentencia = miConexion.prepareStatement("{CALL llamarTipo()}");
            //PreparedStatement Sentencia = miConexion.prepareStatement("{CALL llamarUbicacion(?)}");

            //Sentencia.setString(1,(String)pago.getSelectedItem());

            ResultSet rs =  miSentencia.executeQuery();
            //ResultSet llamar=Sentencia.executeQuery();

            if(h==0){

                this.tipo.addItem("Selecciona una Opcion");

            }

            while(rs.next() && h==0){

                this.tipo.addItem(rs.getString(1));

            }
            h=1;

        } catch (ClassNotFoundException ce) {
            ce.printStackTrace();
        } catch (SQLException ex) {
            Logger.getLogger(Actualizar.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_tipoActionPerformed

    private void bodegaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bodegaActionPerformed
        // TODO add your handling code here:

        try {
            //lista2.removeAllItems();
            Class.forName("com.mysql.jdbc.Driver");
            Connection miConexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/sipe", "root", "");
            System.out.println("conexion establecidad");
            PreparedStatement miSentencia = miConexion.prepareStatement("{CALL llamarbodega()}");
            //PreparedStatement Sentencia = miConexion.prepareStatement("{CALL llamarUbicacion(?)}");

            //Sentencia.setString(1,(String)pago.getSelectedItem());

            ResultSet rs =  miSentencia.executeQuery();
            //ResultSet llamar=Sentencia.executeQuery();

            if(p==0){

                this.bodega.addItem("Selecciona una Opcion");

            }

            while(rs.next() && p==0){

                this.bodega.addItem(rs.getString(1));

            }
            p=1;

        } catch (ClassNotFoundException ce) {
            ce.printStackTrace();
        } catch (SQLException ex) {
            Logger.getLogger(Actualizar.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_bodegaActionPerformed

    private void nombrepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombrepActionPerformed
            // TODO add your handling code here:
        try {
//lista2.removeAllItems();
            Class.forName("com.mysql.jdbc.Driver");
            Connection miConexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/sipe", "root", "");
            System.out.println("conexion establecidad");
            PreparedStatement miSentencia = miConexion.prepareStatement("{CALL llamarNombreProducto()}");
            //PreparedStatement Sentencia = miConexion.prepareStatement("{CALL llamarUbicacion(?)}");

        //Sentencia.setString(1,(String)pago.getSelectedItem());
        
         ResultSet rs =  miSentencia.executeQuery();
         //ResultSet llamar=Sentencia.executeQuery();
         
         if(o==0){
         
         this.nombrep.addItem("Selecciona una Opcion");
         
         }
         
         while(rs.next() && o==0){
             
             
             this.nombrep.addItem(rs.getString(1));
         
             
         
         }
         o=1;
         
        
         

        } catch (ClassNotFoundException ce) {
            ce.printStackTrace();
        } catch (SQLException ex) {
            Logger.getLogger(Actualizar.class.getName()).log(Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_nombrepActionPerformed

    private void idpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idpKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar(); 
             
         
          if(Character.isLetter(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
               
              JOptionPane.showMessageDialog(rootPane,"Ingrese solo numeros");
               
          } 
    }//GEN-LAST:event_idpKeyTyped

    private void idcKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idcKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar(); 
             
         
          if(Character.isLetter(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
               
              JOptionPane.showMessageDialog(rootPane,"Ingrese solo numeros");
               
          } 
    }//GEN-LAST:event_idcKeyTyped

    private void iduKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iduKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar(); 
             
         
          if(Character.isLetter(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
               
              JOptionPane.showMessageDialog(rootPane,"Ingrese solo numeros");
               
          } 
    }//GEN-LAST:event_iduKeyTyped

    private void nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar(); 
             
         
          if(Character.isDigit(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
               
              JOptionPane.showMessageDialog(rootPane,"Ingrese solo letras");
               
          } 
    }//GEN-LAST:event_nombreKeyTyped

    private void cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar(); 
             
         
          if(Character.isLetter(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
               
              JOptionPane.showMessageDialog(rootPane,"Ingrese solo numeros");
               
          } 
    }//GEN-LAST:event_cantidadKeyTyped

    private void unidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unidadKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar(); 
             
         
          if(Character.isLetter(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
               
              JOptionPane.showMessageDialog(rootPane,"Ingrese solo numeros");
               
          } 
    }//GEN-LAST:event_unidadKeyTyped

    private void precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar(); 
             
         
          if(Character.isLetter(c)) { 
              getToolkit().beep(); 
               
              evt.consume(); 
               
              JOptionPane.showMessageDialog(rootPane,"Ingrese solo numeros");
               
          } 
    }//GEN-LAST:event_precioKeyTyped


  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bodega;
    private javax.swing.JButton btnRegresar5;
    private javax.swing.JTextField cantidad;
    private javax.swing.JTextField idc;
    private javax.swing.JTextField idp;
    private javax.swing.JTextField idu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nombre;
    private javax.swing.JComboBox<String> nombrep;
    private javax.swing.JTextField precio;
    private javax.swing.JComboBox<String> tipo;
    private javax.swing.JTextField unidad;
    // End of variables declaration//GEN-END:variables
}
